name: Deploy Flask App via Zip Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install zip and xmllint
        run: |
          sudo apt-get update
          sudo apt-get install -y zip libxml2-utils

      - name: Zip the Flask app folder
        run: |
          # Create a zip file named app.zip containing the 'sefwfre' folder
          zip -r app.zip sefwfre

      - name: Parse Azure publish profile for Zip Deploy settings
        id: parse_profile
        run: |
          # Save the publish profile from the secret into a file
          echo "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}" > publishProfile.xml

          # Extract the publishProfile node that uses ZipDeploy as the publishMethod.
          # This simple approach assumes the publish profile XML is formatted consistently.
          #
          # Extract the publishUrl, userName, and userPWD values.
          PUBLISH_URL=$(xmllint --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@publishUrl)" publishProfile.xml)
          USER_NAME=$(xmllint --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@userName)" publishProfile.xml)
          USER_PWD=$(xmllint --xpath "string(//publishProfile[@publishMethod='ZipDeploy']/@userPWD)" publishProfile.xml)
          
          echo "Publish URL: $PUBLISH_URL"
          echo "User Name: $USER_NAME"
          
          # Set these as output variables for later steps.
          echo "::set-output name=publish_url::$PUBLISH_URL"
          echo "::set-output name=user_name::$USER_NAME"
          echo "::set-output name=user_pwd::$USER_PWD"

      - name: Deploy to Azure via Zip Deploy
        run: |
          # Use the outputs from the previous step.
          echo "Deploying using URL: ${{ steps.parse_profile.outputs.publish_url }}"
          curl -X POST -u "${{ steps.parse_profile.outputs.user_name }}:${{ steps.parse_profile.outputs.user_pwd }}" \
            --data-binary @app.zip \
            -H "Content-Type: application/zip" \
            https://${{ steps.parse_profile.outputs.publish_url }}/api/zipdeploy
